import os
import google.generativeai as genai
import json
from dotenv import load_dotenv
load_dotenv()


class GoogleGeminiTool:
    def __init__(self):
        genai.configure(api_key=os.getenv("GOOGLE_API_KEY"))
        self.model = genai.GenerativeModel('gemini-1.5-flash')

    def summarize(self, headline_prompt, content_prompt):
        # Combine the headline and content prompts into one prompt
        prompt = (
            "You are an Indian Finance and Stock Market News article creator. "
            "Generate a headline and summarize the following article:\n\n"
            f"Headline prompt: {headline_prompt}\n\n"
            f"Content prompt: {content_prompt}\n"
        )

        # Generate response using Google Gemini
        response = self.model.generate_content(prompt,)

        # The response contains the text generated by Gemini
        response_text = response.text.strip()

        # Assuming the headline and summary are separated by a newline, you can split them
        if "\n" in response_text:
            headline, summary = response_text.split("\n", 1)
        else:
            headline = response_text
            summary = ""

        return headline.strip(), summary.strip()


if __name__ == "__main__":
    summarize_tool = GoogleGeminiTool()
    with open('exo_news.json', 'r') as f:
        data = json.load(f)

    for article in data:
        header = article["headline"]
        content = article["news_content"]

        summary = summarize_tool.summarize(header, content)
        with open('news.json', 'a') as f:
            json.dump(summary, f, indent=4)
